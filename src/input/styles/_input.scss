@use 'sass:math';

$size: 32px;
$size-step: 4px;
$tiny-size: $size - $size-step * 2;
$small-size: $size - $size-step;
$medium-size: $size;
$large-size: $size+$size-step;
$giant-size: $size+$size-step * 2;

@mixin input-size($component) {
  @if ($component=='g-select') {
    &--tiny {
      &>.#{$component}__holder {
        grid-template-columns: 1fr $tiny-size;

        &>.#{$component}__group {
          &>.#{$component}__selection {
            min-height: $tiny-size;
          }
        }
      }
    }

    &--small {
      &>.#{$component}__holder {
        grid-template-columns: 1fr $small-size;

        &>.#{$component}__group {
          &>.#{$component}__selection {
            min-height: $small-size;
          }
        }
      }
    }

    &--medium {
      &>.#{$component}__holder {
        grid-template-columns: 1fr $medium-size;

        &>.#{$component}__group {
          &>.#{$component}__selection {
            min-height: $medium-size;
          }
        }
      }
    }

    &--large {
      &>.#{$component}__holder {
        grid-template-columns: 1fr $large-size;

        &>.#{$component}__group {
          &>.#{$component}__selection {
            min-height: $large-size;
          }
        }
      }
    }

    &--giant {
      &>.#{$component}__holder {
        grid-template-columns: 1fr $giant-size;

        &>.#{$component}__group {
          &>.#{$component}__selection {
            min-height: $giant-size;
          }
        }
      }
    }
  }

  @else {
    &--tiny {
      &.#{$component}--clearable {
        &>.#{$component}__holder {
          grid-template-columns: 1fr $tiny-size;
        }
      }
    }

    &--small {
      &.#{$component}--clearable {
        &>.#{$component}__holder {
          grid-template-columns: 1fr $small-size;
        }
      }
    }

    &--medium {
      &.#{$component}--clearable {
        &>.#{$component}__holder {
          grid-template-columns: 1fr $medium-size;
        }
      }
    }

    &--large {
      &.#{$component}--clearable {
        &>.#{$component}__holder {
          grid-template-columns: 1fr $large-size;
        }
      }
    }

    &--giant {
      &.#{$component}--clearable {
        &>.#{$component}__holder {
          grid-template-columns: 1fr $giant-size;
        }
      }
    }
  }
}

@mixin input-size-common($component) {
  &--tiny {
    &.#{$component}--rounded {
      border-radius: math.div($tiny-size, 2);
    }

    &>.#{$component}__label {
      line-height: $tiny-size;
      max-width: calc(100% - $tiny-size);
    }

    &>.#{$component}__holder {
      &>.#{$component}__group {

        &>.#{$component}__input,
        &>.#{$component}__suffix {
          line-height: $tiny-size;
        }
      }

      &>.#{$component}__icon {
        @include absolute-height($tiny-size);
        @include absolute-width($tiny-size);
      }
    }
  }

  &--small {
    &.#{$component}--rounded {
      border-radius: math.div($small-size, 2);
    }

    &>.#{$component}__label {
      line-height: $small-size;
      max-width: calc(100% - $small-size);
    }

    &>.#{$component}__holder {
      &>.#{$component}__group {

        &>.#{$component}__input,
        &>.#{$component}__suffix {
          line-height: $small-size;
        }
      }

      &>.#{$component}__icon {
        @include absolute-height($small-size);
        @include absolute-width($small-size);
      }
    }
  }

  &--medium {
    &.#{$component}--rounded {
      border-radius: math.div($medium-size, 2);
    }

    &>.#{$component}__label {
      line-height: $medium-size;
      max-width: calc(100% - $medium-size);
    }

    &>.#{$component}__holder {
      &>.#{$component}__group {

        &>.#{$component}__input,
        &>.#{$component}__suffix {
          line-height: $medium-size;
        }
      }

      &>.#{$component}__icon {
        @include absolute-height($medium-size);
        @include absolute-width($medium-size);
      }
    }
  }

  &--large {
    &.#{$component}--rounded {
      border-radius: math.div($large-size, 2);
    }

    &>.#{$component}__label {
      line-height: $large-size;
      max-width: calc(100% - $large-size);
    }

    &>.#{$component}__holder {
      &>.#{$component}__group {

        &>.#{$component}__input,
        &>.#{$component}__suffix {
          line-height: $large-size;
        }
      }

      &>.#{$component}__icon {
        @include absolute-height($large-size);
        @include absolute-width($large-size);
      }
    }
  }

  &--giant {
    &.#{$component}--rounded {
      border-radius: math.div($giant-size, 2);
    }

    &>.#{$component}__label {
      line-height: $giant-size;
      max-width: calc(100% - $giant-size);
    }

    &>.#{$component}__holder {
      &>.#{$component}__group {

        &>.#{$component}__input,
        &>.#{$component}__suffix {
          line-height: $giant-size;
        }
      }

      &>.#{$component}__icon {
        @include absolute-height($giant-size);
        @include absolute-width($giant-size);
      }
    }
  }
}

@mixin input-base {
  margin-top: 14px;
  display: grid;
  grid-template-columns: 1fr;
  align-self: flex-start;
  align-items: flex-start;
  align-content: flex-start;
  position: relative;
  min-width: 56px;

  &__label {
    padding-right: 16px;
    font-size: 16px;
    font-weight: 400;
    color: $black-54;
    text-overflow: ellipsis;
    white-space: nowrap;
    user-select: none;
    transition-property: font-size, color, top, left;
    transition-duration: $transition-duration;
    transition-timing-function: $transition-timing-function;
    will-change: font-size, color, top, left;
    overflow: hidden;
    position: absolute;
    top: 0;
    left: 0;
    pointer-events: none;
    z-index: 1;
  }

  &__holder {
    display: grid;
    align-items: flex-start;
  }

  &__group {
    position: relative;
    display: flex;
    flex: 1;
    user-select: none;
    overflow: hidden;
  }

  &__border {
    transition-property: border-bottom-color;
    transition-duration: 200ms;
    transition-timing-function: $transition-timing-function;
    will-change: border-bottom-color;
    border-bottom-width: 1px;
    border-bottom-style: solid;
    border-bottom-color: $black-54;
    position: absolute;
    top: 0;
    left: 0;
    height: 0;
    width: 100%;

    &::before {
      content: '';
      border-bottom-width: 0;
      border-bottom-style: solid;
      border-bottom-color: currentColor;
      transition-property: border-bottom-color, left, width;
      transition-duration: 240ms;
      transition-timing-function: $transition-timing-function;
      will-change: border-bottom-color, left, width;
      position: absolute;
      top: -1px;
      left: 50%;
      opacity: 0;
      height: 0;
      width: 0;
    }
  }

  &__footer {
    position: relative;
    display: flex;
    align-items: flex-start;
    flex: 1;
  }

  &__details {
    margin-top: 8px;
    font-size: 12px;
    font-weight: 400;
    line-height: 14px;
    color: $black-54;
    user-select: none;
    display: flex;
    flex: 1;
    min-height: 14px;
  }
}

@mixin input-style($component) {
  @include input-size($component);
  @include input-size-common($component);

  &__icon {
    display: flex;
    align-self: center;
    align-items: center;
    align-content: center;
    justify-content: center;
    cursor: pointer;
  }

  &--box {
    &:hover {
      &>.#{$component}__holder {
        background: $black-12;
      }
    }

    &>.#{$component}__holder {
      background: $black-06;
    }
  }

  &--box,
  &--solo,
  &--outline,
  &--outline-label {
    &>.#{$component}__label {
      left: 13px;
    }

    &>.#{$component}__holder {
      &>.#{$component}__group {
        padding-left: 12px;
        padding-right: 12px;
        align-items: center;
      }
    }


    &>.#{$component}__footer {
      padding-left: 12px;
      padding-right: 12px;

      &>.#{$component}__details {
        margin-top: 0;
      }
    }
  }

  &--solo {
    &:not(.#{$component}--flat) {
      & .#{$component}__holder {
        @include g-elevation(2);
      }
    }
  }

  &--box,
  &--solo,
  &--outline {
    margin-top: 0;
  }

  &--solo,
  &--outline,
  &--outline-label {
    &>.#{$component}__holder {
      background-color: var(--white);
    }
  }

  &--outline,
  &--outline-label {
    &>.#{$component}__label {
      top: 1px;
      left: 13px;
    }

    &>.#{$component}__holder {
      border-style: solid;
      border-width: 1px;
      border-color: $border-color;
    }
  }

  &--rounded {
    &>.#{$component}__holder {
      border-radius: 12px;
    }
  }

  &--filled {
    &>.#{$component}__label {
      color: $black-54;
    }
  }

  &--labeled,
  &--filled {
    &>.#{$component}__holder {
      &>.#{$component}__group {
        &>.#{$component}__input {
          &::placeholder {
            opacity: 0;
          }
        }
      }
    }
  }

  &--filled,
  &--active,
  &--focused {
    &:not(.#{$component}--box):not(.#{$component}--solo):not(.#{$component}--outline) {
      &>.#{$component}__label {
        font-size: 12px;
        line-height: 14px;
        top: -14px;
        max-width: 100%;
      }
    }
  }

  &--active,
  &--focused {
    &:not(.#{$component}--filled):not(.#{$component}--labeled) {
      &>.#{$component}__holder {
        &>.#{$component}__group {
          &>.#{$component}__input {
            &::placeholder {
              opacity: 1;
            }
          }
        }
      }
    }

    &>.#{$component}__footer {
      &>.#{$component}__border {
        border-bottom-color: currentColor;

        &::before {
          border-bottom-width: 2px;
          border-bottom-color: currentColor;
          opacity: 1;
          left: 0;
          width: 100%;
        }
      }
    }

    &.#{$component}--outline,
    &.#{$component}--outline-label {
      &>.#{$component}__holder {
        border-color: var(--primary);
      }
    }
  }

  &--focused {
    &>.#{$component}__label {
      color: var(--primary);
    }

    &>.#{$component}__footer {
      &>.#{$component}__border {
        border-bottom-color: var(--primary);

        &::before {
          border-bottom-color: var(--primary);
        }
      }
    }
  }

  &--disabled {
    & * {
      cursor: default;
      user-select: none;
    }

    & .#{$component}__label,
    & .#{$component}__selection,
    & .#{$component}__before,
    & .#{$component}__after,
    & .#{$component}__input,
    & .#{$component}__details {
      color: $black-36;
    }

    & .#{$component}__border {
      border-bottom-color: $black-36;
      border-bottom-style: dotted;
    }
  }

  &--error {

    & .#{$component}__label,
    & .#{$component}__before,
    & .#{$component}__after,
    & .#{$component}__input,
    & .#{$component}__details {
      color: var(--error);
    }

    & .#{$component}__input,
    & .#{$component}__label {
      &::placeholder {
        color: var(--error);
        opacity: 1;
      }
    }

    & .#{$component}__border {
      border-bottom-color: var(--error);

      &::before {
        border-bottom-color: var(--error);
      }
    }

    &.#{$component}--outline {
      & .#{$component}__holder {
        border-color: var(--error);
      }
    }
  }

  &--success {

    & .#{$component}__label,
    & .#{$component}__before,
    & .#{$component}__after,
    & .#{$component}__input,
    & .#{$component}__details {
      color: var(--success);
    }

    & .#{$component}__input,
    & .#{$component}__label {
      &::placeholder {
        color: var(--success);
        opacity: 1;
      }
    }

    & .#{$component}__border {
      border-bottom-color: var(--success);

      &::before {
        border-bottom-color: var(--success);
      }
    }

    &.#{$component}--outline {
      & .#{$component}__holder {
        border-color: var(--success);
      }
    }
  }
}

.g {
  &-input {
    margin: 0;
    padding: 0;
    font-size: 16px;
    font-weight: 400;
    line-height: 16px;
    color: $black-84;
    caret-color: $black-84;
    border: 0;
    border-image-width: 0;
    background-color: transparent;
    outline: none;
    position: relative;
    text-overflow: ellipsis;
    white-space: nowrap;
    display: inline-flex;
    flex: 1;
    cursor: text;
    min-width: 16px;
    width: 100%;

    &::placeholder {
      color: $black-54;
      opacity: 1;
    }
  }
}